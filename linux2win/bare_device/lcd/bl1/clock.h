#ifndef _CLOCK_H
#define _CLOCK_H
#include "local_typedef.h"

#define __REG(x)	(*(volatile ulong *)(x))

#define APLL 0
#define MPLL 1
#define EPLL 2

/* APLL PMS value */
#define APLL_MDIV      	 		125
#define APLL_PDIV       		3
#define APLL_SDIV       		1
/* MPLL PMS value */
#define MPLL_MDIV				667
#define MPLL_PDIV				12
#define MPLL_SDIV				1

#define set_pll(mdiv, pdiv, sdiv)	(1<<31 | mdiv<<16 | pdiv<<8 | sdiv)
#define APLL_VAL					set_pll(APLL_MDIV,APLL_PDIV,APLL_SDIV)
#define MPLL_VAL					set_pll(MPLL_MDIV,MPLL_PDIV,MPLL_SDIV)

#define CONFIG_SYS_CLK_FREQ	    24000000

#define APLL_LOCK_OFFSET		0x00
#define MPLL_LOCK_OFFSET		0x08
#define EPLL_LOCK_OFFSET		0x10
#define VPLL_LOCK_OFFSET		0x20
#define APLL_CON0_OFFSET		0x100
#define APLL_CON1_OFFSET		0x104
#define MPLL_CON_OFFSET			0x108
#define EPLL_CON_OFFSET			0x110
#define VPLL_CON_OFFSET			0x120

#define CLK_SRC0_OFFSET			0x200
#define CLK_SRC1_OFFSET			0x204
#define CLK_SRC2_OFFSET			0x208
#define CLK_SRC3_OFFSET			0x20c
#define CLK_SRC4_OFFSET			0x210
#define CLK_SRC5_OFFSET			0x214
#define CLK_SRC6_OFFSET			0x218
#define CLK_SRC_MASK0_OFFSET	0x280
#define CLK_SRC_MASK1_OFFSET	0x284

#define CLK_DIV0_OFFSET			0x300
#define CLK_DIV1_OFFSET			0x304
#define CLK_DIV2_OFFSET			0x308
#define CLK_DIV3_OFFSET			0x30c
#define CLK_DIV4_OFFSET			0x310
#define CLK_DIV5_OFFSET			0x314
#define CLK_DIV6_OFFSET			0x318
#define CLK_DIV7_OFFSET			0x31c

#define CLK_GATE_IP0_OFFSET		0x460
#define CLK_GATE_IP1_OFFSET		0x464
#define CLK_GATE_IP2_OFFSET		0x468
#define CLK_GATE_IP3_OFFSET		0x46c
#define CLK_GATE_IP4_OFFSET		0x470
#define CLK_GATE_BLOCK_OFFSET	0x480

#define CLK_OUT_OFFSET				0x500
#define CLK_DIV_STAT0_OFFSET		0x1000
#define CLK_DIV_STAT1_OFFSET		0x1004
#define CLK_MUX_STAT0_OFFSET		0x1100
#define CLK_MUX_STAT1_OFFSET		0x1104
#define SW_RST_OFFSET				0x2000

#define ELFIN_CLOCK_POWER_BASE		0xE0100000

#define APLL_LOCK_REG			__REG(ELFIN_CLOCK_POWER_BASE+APLL_LOCK_OFFSET)
#define MPLL_LOCK_REG			__REG(ELFIN_CLOCK_POWER_BASE+MPLL_LOCK_OFFSET)
#define EPLL_LOCK_REG			__REG(ELFIN_CLOCK_POWER_BASE+EPLL_LOCK_OFFSET)
//#define HPLL_LOCK_REG			__REG(ELFIN_CLOCK_POWER_BASE+HPLL_LOCK_OFFSET)
#define APLL_CON0_REG			__REG(ELFIN_CLOCK_POWER_BASE+APLL_CON0_OFFSET)
#define APLL_CON1_REG			__REG(ELFIN_CLOCK_POWER_BASE+APLL_CON1_OFFSET)
#define MPLL_CON_REG			__REG(ELFIN_CLOCK_POWER_BASE+MPLL_CON_OFFSET)
#define EPLL_CON_REG			__REG(ELFIN_CLOCK_POWER_BASE+EPLL_CON_OFFSET)
//#define HPLL_CON_REG			__REG(ELFIN_CLOCK_POWER_BASE+HPLL_CON_OFFSET)
#define CLK_SRC0_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_SRC0_OFFSET)
#define CLK_SRC1_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_SRC1_OFFSET)
#define CLK_SRC2_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_SRC2_OFFSET)
#define CLK_SRC3_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_SRC3_OFFSET)
#define CLK_SRC4_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_SRC4_OFFSET)
#define CLK_DIV0_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV0_OFFSET)
#define CLK_DIV1_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV1_OFFSET)
#define CLK_DIV2_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV2_OFFSET)
#define CLK_DIV3_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV3_OFFSET)
#define CLK_DIV4_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV4_OFFSET)
#define CLK_DIV5_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV5_OFFSET)
#define CLK_DIV6_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV6_OFFSET)
#define CLK_DIV7_REG			__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV7_OFFSET)

#define CLK_DIV_STAT0_REG		__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV_STAT0_OFFSET)
#define CLK_DIV_STAT1_REG		__REG(ELFIN_CLOCK_POWER_BASE+CLK_DIV_STAT1_OFFSET)
#define CLK_MUX_STAT0_REG		__REG(ELFIN_CLOCK_POWER_BASE+CLK_MUX_STAT0_OFFSET)
#define CLK_MUX_STAT1_REG		__REG(ELFIN_CLOCK_POWER_BASE+CLK_MUX_STAT1_OFFSET)

void clock_init(void);
int print_cpuinfo(void);

#endif